# LangGraph多智能体系统环境配置示例
# 复制此文件为 .env 并根据实际情况修改配置值

# =============================================================================
# 基础配置
# =============================================================================

# 应用环境 (development, staging, production)
ENVIRONMENT=development

# 日志级别 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# 应用密钥 (用于JWT等加密，生产环境请使用强密钥)
SECRET_KEY=your-secret-key-change-in-production

# =============================================================================
# API服务配置
# =============================================================================

# API服务主机和端口
API_HOST=0.0.0.0
API_PORT=8000

# API文档配置
API_TITLE="LangGraph多智能体工作流API"
API_VERSION=1.0.0
API_DESCRIPTION="基于LangGraph的多智能体协作工作流系统API"

# CORS配置 (逗号分隔的域名列表)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000

# 可信主机 (逗号分隔)
TRUSTED_HOSTS=localhost,127.0.0.1,0.0.0.0

# =============================================================================
# 认证和安全配置
# =============================================================================

# 是否启用认证
ENABLE_AUTH=false

# JWT配置
JWT_SECRET_KEY=your-jwt-secret-key
JWT_ALGORITHM=HS256
JWT_EXPIRE_MINUTES=1440

# 是否启用限流
ENABLE_RATE_LIMIT=true

# 限流配置 (每分钟请求数)
RATE_LIMIT_RPM=100

# =============================================================================
# 数据库配置
# =============================================================================

# SQLite数据库路径 (唯一持久化存储)
SQLITE_DATABASE_PATH=./data/app.db

# 注意：已移除PostgreSQL支持，使用SQLite作为唯一持久化存储
# 原PostgreSQL配置已停用，将自动回退到SQLite

# 数据库连接池配置 (SQLite优化)
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30

# =============================================================================
# Redis配置
# =============================================================================

# Redis连接URL
REDIS_URL=redis://localhost:6379/0

# Redis连接池配置
REDIS_MAX_CONNECTIONS=10
REDIS_RETRY_ON_TIMEOUT=true

# =============================================================================
# LangGraph和LLM配置
# =============================================================================

# 硅基流动配置 (默认使用)
SILICONFLOW_API_KEY=sk-wmxxamqdqsmscgrrmweqsqcieowsmqpxqwvenlelrxtkvmms
SILICONFLOW_BASE_URL=https://api.siliconflow.cn/v1
SILICONFLOW_MODEL=deepseek-ai/DeepSeek-R1-Distill-Qwen-7B
SILICONFLOW_TEMPERATURE=0.7
SILICONFLOW_MAX_TOKENS=2000
SILICONFLOW_TIMEOUT=60
SILICONFLOW_MAX_RETRIES=3

# OpenAI配置 (备用)
OPENAI_API_KEY=your-openai-api-key
OPENAI_MODEL=gpt-4
OPENAI_TEMPERATURE=0.7
OPENAI_MAX_TOKENS=2000

# Anthropic配置 (备用)
ANTHROPIC_API_KEY=your-anthropic-api-key
ANTHROPIC_MODEL=claude-3-sonnet-20240229

# 本地LLM配置 (如Ollama)
LOCAL_LLM_URL=http://localhost:11434
LOCAL_LLM_MODEL=llama2

# 默认LLM提供商 (siliconflow, openai, anthropic, local)
DEFAULT_LLM_PROVIDER=siliconflow

# =============================================================================
# 工作流配置
# =============================================================================

# 默认执行模式 (sequential, parallel, adaptive)
DEFAULT_EXECUTION_MODE=adaptive

# 默认超时时间 (秒)
DEFAULT_TIMEOUT_SECONDS=3600

# 最大重试次数
MAX_RETRIES=3

# 检查点间隔 (秒)
CHECKPOINT_INTERVAL=60

# 检查点存储类型 (memory, sqlite)
CHECKPOINT_STORAGE=memory

# =============================================================================
# 错误处理配置
# =============================================================================

# 是否启用自愈机制
ENABLE_SELF_HEALING=true

# 熔断器配置
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_RECOVERY_TIMEOUT=60

# 错误报告Webhook URL
ERROR_WEBHOOK_URL=

# =============================================================================
# 监控和指标配置
# =============================================================================

# 是否启用Prometheus指标
ENABLE_PROMETHEUS=true

# Prometheus指标端口
PROMETHEUS_PORT=9090

# 健康检查间隔 (秒)
HEALTH_CHECK_INTERVAL=30

# 性能指标收集间隔 (秒)
METRICS_COLLECTION_INTERVAL=60

# =============================================================================
# WebSocket配置
# =============================================================================

# WebSocket连接超时 (秒)
WS_CONNECTION_TIMEOUT=300

# WebSocket消息队列大小
WS_MESSAGE_QUEUE_SIZE=100

# WebSocket心跳间隔 (秒)
WS_HEARTBEAT_INTERVAL=30

# =============================================================================
# 文件存储配置
# =============================================================================

# 数据目录
DATA_DIR=./data

# 日志目录
LOG_DIR=./logs

# 检查点目录
CHECKPOINT_DIR=./checkpoints

# 临时文件目录
TEMP_DIR=./temp

# 最大文件上传大小 (MB)
MAX_UPLOAD_SIZE=100

# =============================================================================
# 缓存配置
# =============================================================================

# 缓存类型 (memory, redis)
CACHE_TYPE=memory

# 缓存TTL (秒)
CACHE_TTL=3600

# 缓存最大大小 (MB)
CACHE_MAX_SIZE=100

# =============================================================================
# 开发和调试配置
# =============================================================================

# 是否启用调试模式
DEBUG=false

# 是否启用热重载
RELOAD=false

# 是否启用详细日志
VERBOSE_LOGGING=false

# 是否启用性能分析
ENABLE_PROFILING=false

# 测试数据库URL
TEST_DATABASE_URL=sqlite:///./test.db

# =============================================================================
# 第三方服务配置
# =============================================================================

# Slack通知配置
SLACK_WEBHOOK_URL=
SLACK_CHANNEL=#alerts

# 邮件通知配置
SMTP_HOST=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=

# 钉钉通知配置
DINGTALK_WEBHOOK_URL=
DINGTALK_SECRET=

# =============================================================================
# 部署配置
# =============================================================================

# 部署环境标识
DEPLOYMENT_ENV=local

# 服务版本
SERVICE_VERSION=1.0.0

# 构建时间
BUILD_TIME=

# Git提交哈希
GIT_COMMIT=

# 容器配置
CONTAINER_NAME=langgraph-multi-agent
CONTAINER_MEMORY_LIMIT=2g
CONTAINER_CPU_LIMIT=1.0